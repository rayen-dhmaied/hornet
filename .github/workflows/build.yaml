name: Build and Push to GHCR

on:
  push:
    branches:
      - main
    paths:
      - '**.go'
      - 'Dockerfile'
      - 'api/followers/**'
      - 'api/posts/**'
      - 'common/**'
      - 'config/**'
      - 'go.mod'
      - 'go.sum'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: hornet

jobs:
  build:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service: [posts, followers]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.2

      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}

      - name: Build Docker Image
        run: |
          echo "Building Docker image for service: ${{ matrix.service }}"
          docker build \
            --build-arg SERVICE=${{ matrix.service }} \
            --build-arg PORT=8080 \
            -t ${{ env.REGISTRY }}/${{ github.repository }}:${{ matrix.service }}-${{ github.sha }} .

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker Image
        run: |
          echo "Pushing Docker image for service: ${{ matrix.service }}"
          docker push ${{ env.REGISTRY }}/${{ github.repository }}:${{ matrix.service }}-${{ github.sha }}

      - name: Tag and Push Latest
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag ${{ env.REGISTRY }}/${{ github.repository }}:${{ matrix.service }}-${{ github.sha }} ${{ env.REGISTRY }}/${{ github.repository }}:${{ matrix.service }}-latest
          docker push ${{ env.REGISTRY }}/${{ github.repository }}:${{ matrix.service }}-latest